export interface Rarity {
    text: string;
    symbol: string;
}

export const Alpha: Rarity = {
    text: '·¥Ä ü·¥ò ú·¥Ä',
    symbol: 'Œ±',
};

export const Beta: Rarity = {
    text: ' ô·¥á·¥õ·¥Ä',
    symbol: 'Œ≤',
};

export const Gamma: Rarity = {
    text: '…¢·¥Ä·¥ç·¥ç·¥Ä',
    symbol: 'Œ≥',
};

export const Delta: Rarity = {
    text: '·¥Ö·¥á ü·¥õ·¥Ä',
    symbol: 'Œ¥',
};

export const Epsilon: Rarity = {
    text: '·¥á·¥òs…™ ü·¥è…¥',
    symbol: 'Œµ',
};

export const Zeta: Rarity = {
    text: '·¥¢·¥á·¥õ·¥Ä',
    symbol: 'Œ∂',
};

export const Ultra: Rarity = {
    text: '·¥ú ü·¥õ Ä·¥Ä',
    symbol: 'Œ∂ùì°',
};

export const Scarlet: Rarity = {
    text: 's·¥Ñ·¥Ä Ä ü·¥á·¥õ',
    symbol: '‚Ä†',
};

export const Event: Rarity = {
    text: '·¥á·¥†·¥á…¥·¥õ',
    symbol: 'ŒæŒΩ',
};

export const Special: Rarity = {
    text: 's·¥ò·¥á·¥Ñ…™·¥Ä ü',
    symbol: 'Œõ',
};


const textMap: Map<string, Rarity> = new Map();
textMap
    .set('·¥Ä ü·¥ò ú·¥Ä', Alpha)
    .set(' ô·¥á·¥õ·¥Ä', Beta)
    .set('…¢·¥Ä·¥ç·¥ç·¥Ä', Gamma)
    .set('·¥Ö·¥á ü·¥õ·¥Ä', Delta)
    .set('·¥á·¥òs…™ ü·¥è…¥', Epsilon)
    .set('·¥¢·¥á·¥õ·¥Ä', Zeta)
    .set('·¥ú ü·¥õ Ä·¥Ä', Ultra)
    .set('s·¥Ñ·¥Ä Ä ü·¥á·¥õ', Scarlet)
    .set('·¥á·¥†·¥á…¥·¥õ', Event)
    .set('s·¥ò·¥á·¥Ñ…™·¥Ä ü', Special);

const symbolMap: Map<string, Rarity> = new Map();
symbolMap
    .set('Œ±', Alpha)
    .set('Œ≤', Beta)
    .set('Œ≥', Gamma)
    .set('Œ¥', Delta)
    .set('Œµ', Epsilon)
    .set('Œ∂', Zeta)
    .set('Œ∂ùì°', Ultra)
    .set('‚Ä†', Scarlet)
    .set('ŒæŒΩ', Event)
    .set('Œõ', Special);

interface RarityQuery {
    text?: string;
    symbol?: string;
}

export function findRarity(query: RarityQuery): Rarity | null {
    if (query.text) {
        const rarity = textMap.get(query.text);
        if (rarity) {
            return rarity;
        }
    }

    if (query.symbol) {
        const rarity = textMap.get(query.symbol);
        if (rarity) {
            return rarity;
        }
    }

    return null;
}
