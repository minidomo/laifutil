export interface Rarity {
    text: string;
    symbol: string;
}

export interface RarityContainer {
    ALPHA: Rarity;
    BETA: Rarity;
    GAMMA: Rarity;
    DELTA: Rarity;
    EPSILON: Rarity;
    ZETA: Rarity;
    ULTRA: Rarity;
    SCARLET: Rarity;
    EVENT: Rarity;
    SPECIAL: Rarity;
}

function createConstants(): RarityContainer {
    const constants: RarityContainer = {
        ALPHA: {
            text: '·¥Ä ü·¥ò ú·¥Ä',
            symbol: 'Œ±',
        },
        BETA: {
            text: ' ô·¥á·¥õ·¥Ä',
            symbol: 'Œ≤',
        },
        GAMMA: {
            text: '…¢·¥Ä·¥ç·¥ç·¥Ä',
            symbol: 'Œ≥',
        },
        DELTA: {
            text: '·¥Ö·¥á ü·¥õ·¥Ä',
            symbol: 'Œ¥',
        },
        EPSILON: {
            text: '·¥á·¥òs…™ ü·¥è…¥',
            symbol: 'Œµ',
        },
        ZETA: {
            text: '·¥¢·¥á·¥õ·¥Ä',
            symbol: 'Œ∂',
        },
        ULTRA: {
            text: '·¥ú ü·¥õ Ä·¥Ä',
            symbol: 'Œ∂ùì°',
        },
        SCARLET: {
            text: 's·¥Ñ·¥Ä Ä ü·¥á·¥õ',
            symbol: '‚Ä†',
        },
        EVENT: {
            text: '·¥á·¥†·¥á…¥·¥õ',
            symbol: 'ŒæŒΩ',
        },
        SPECIAL: {
            text: 's·¥ò·¥á·¥Ñ…™·¥Ä ü',
            symbol: 'Œõ',
        },
    };

    Object.freeze(constants);
    Object.values(constants).forEach((rarity: Rarity) => Object.freeze(rarity));

    return constants;
}

export const constants = createConstants();

function createRegex(): RegExp {
    const baseExp = Object.values(constants)
        .map((rarity: Rarity) => `${rarity.text}|${rarity.symbol}`)
        .join('|');
    return new RegExp(`(${baseExp})`);
}

export const REGEX = createRegex();

const mappings: Map<string, Rarity> = new Map();
mappings
    .set('·¥Ä ü·¥ò ú·¥Ä', constants.ALPHA)
    .set(' ô·¥á·¥õ·¥Ä', constants.BETA)
    .set('…¢·¥Ä·¥ç·¥ç·¥Ä', constants.GAMMA)
    .set('·¥Ö·¥á ü·¥õ·¥Ä', constants.DELTA)
    .set('·¥á·¥òs…™ ü·¥è…¥', constants.EPSILON)
    .set('·¥¢·¥á·¥õ·¥Ä', constants.ZETA)
    .set('·¥ú ü·¥õ Ä·¥Ä', constants.ULTRA)
    .set('s·¥Ñ·¥Ä Ä ü·¥á·¥õ', constants.SCARLET)
    .set('·¥á·¥†·¥á…¥·¥õ', constants.EVENT)
    .set('s·¥ò·¥á·¥Ñ…™·¥Ä ü', constants.SPECIAL)
    .set('Œ±', constants.ALPHA)
    .set('Œ≤', constants.BETA)
    .set('Œ≥', constants.GAMMA)
    .set('Œ¥', constants.DELTA)
    .set('Œµ', constants.EPSILON)
    .set('Œ∂', constants.ZETA)
    .set('Œ∂ùì°', constants.ULTRA)
    .set('‚Ä†', constants.SCARLET)
    .set('ŒæŒΩ', constants.EVENT)
    .set('Œõ', constants.SPECIAL);

export function resolve(query: string): Rarity | null {
    return mappings.get(query) ?? null;
}
